<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shaun David Ellis</title>
    <description>Creative polymath with iconoclastic tendencies.
</description>
    <link>http://sdellis.com/</link>
    <atom:link href="http://sdellis.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 09 Oct 2015 15:55:31 -0400</pubDate>
    <lastBuildDate>Fri, 09 Oct 2015 15:55:31 -0400</lastBuildDate>
    <generator>Jekyll v2.4.0</generator>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code&gt;jekyll serve --watch&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 09 Oct 2015 08:29:07 -0400</pubDate>
        <link>http://sdellis.com/jekyll/update/2015/10/09/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://sdellis.com/jekyll/update/2015/10/09/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Spiiiffy</title>
        <description>
&lt;p&gt;There has been some interest in the community around how to use the osullivan gem to generate manifests, so I have decided to write a blog post that will document my experience and hopefully be of some use to others who want to start using osullivan.  In this post, I will step through the process of cooking up a utility app that will turn structured data in the METS format into IIIF Presentation API manifests.  &lt;/p&gt;

&lt;p&gt;Since we are “cleaning up” the extensive METS data to make it “presentable” on the web, I’m calling the app “spiiiffy”.  Our infrastructure already has lots of support for Rails apps, so I’m going to go with the flow and use ruby 2.0.0p451 paired with Rails 4.2.0.  Here we go:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
rails new spiiiffy
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Spiiiffy will need to take a URL that provides a METS document, use the nokogiri to parse the XML data, and use the osullivan gem to create the Presentation API manifest structure.  Then it will need to store both datastreams and deliver either depending on the request.&lt;/p&gt;

&lt;p&gt;So we modify our Gemfile by adding these lines:&lt;/p&gt;

&lt;p&gt;```
…&lt;/p&gt;

&lt;h1 id=&quot;use-nokogiri-for-xml-parsing&quot;&gt;Use Nokogiri for XML parsing&lt;/h1&gt;
&lt;p&gt;gem ‘nokogiri’, ‘&amp;gt;= 1.6.6.2’&lt;/p&gt;

&lt;h1 id=&quot;use-osullivan-for-manifest-creation&quot;&gt;Use osullivan for Manifest creation&lt;/h1&gt;
&lt;p&gt;gem ‘osullivan’, ‘&amp;gt;= 0.0.3’&lt;/p&gt;

&lt;p&gt;…
``` &lt;/p&gt;

&lt;p&gt;Let’s generate our Metadata model and run the migration to create the table:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
rails generate scaffold Metadata mets:longtext manifest:longtext title:string
bundle exec rake db:migrate
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the accessors to the model:&lt;/p&gt;

&lt;p&gt;```
class Metadatum &amp;lt; ActiveRecord::Base
  attr_accessor :mets, :manifest, :title, :objid
  …&lt;/p&gt;

&lt;p&gt;…
end
```&lt;/p&gt;

&lt;p&gt;Before saving, extract the title and objid from the record for human and computer usability:&lt;/p&gt;

&lt;p&gt;```
…
  before_create :set_title, :set_objid
  before_update :set_title, :set_objid&lt;/p&gt;

&lt;p&gt;private
    def set_title
      mets_doc  = Nokogiri::XML(self.mets)
      self.title = mets_doc.xpath(‘(//mods:titleInfo/mods:title/text())[1]’, ‘mods’ =&amp;gt; ‘http://www.loc.gov/mods/v3’)
      self.title.blank? ? “untitled” : self.title
    end&lt;/p&gt;

&lt;p&gt;private
    def set_objid
      mets_doc  = Nokogiri::XML(self.mets)
      self.objid = mets_doc.xpath(‘string(//mets:mets/@OBJID)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)
    end&lt;/p&gt;

&lt;p&gt;…&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;We’re going to make sure that we can get to the object using the OBJID instead of the Rails internal id.&lt;/p&gt;

&lt;p&gt;```
…&lt;/p&gt;

&lt;p&gt;def to_param
    objid
  end&lt;/p&gt;

&lt;p&gt;#validates_format_of :objid, :with =&amp;gt; /\A[a-z].+\z/
  def self.find(input)
    input.to_i == 0 ? find_by_objid(input) : super
  end&lt;/p&gt;

&lt;p&gt;…
```&lt;/p&gt;

&lt;p&gt;Start building a manifest with osullivan&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
...
  private
    def make_manifest
      seed = {
        &#39;@id&#39; =&amp;gt; &#39;http://localhost:3000/metadata/#{self.objid}&#39;,
        &#39;label&#39; =&amp;gt; self.title
      }
      # Any options you add are added to the object
      self.manifest = IIIF::Presentation::Manifest.new(seed)
    end
...
&lt;/code&gt;
 Note: for some reason, I needed to add &lt;code&gt;require &#39;iiif/presentation&#39;&lt;/code&gt; to the top of the model file even though it’s in the Gemfile.  May not be loading correctly.&lt;/p&gt;

&lt;p&gt;I should probably write a test for this, but just to quickly check to make sure it’s working, I spun up the rails server and noticed the json data in the manifest textarea when attempting to edit a record.  Huzzzaaah, a baby manifest!&lt;/p&gt;

&lt;p&gt;Now we’re starting to really get our hands dirty, and it’s probably time to refactor some things. For example, in both set_title and set_objid we are doing the same thing:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;mets_doc  = Nokogiri::XML(self.mets)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We should pull these duplicate steps out and when initialized we create a Nokogiri nodeset object that’s accessible to all methods within this class.  I don’t know how to do this yet.&lt;/p&gt;

&lt;p&gt;We will put off the refactoring for the moment in the interest of working code. The next step is to iterate over the mets:structMap and add canvases to our baby manifest. So, yet again, we create a Nokogiri doc from the METS, get our ordered list, and also grab all the image files from the fileSec:&lt;/p&gt;

&lt;p&gt;```
mets_doc  = Nokogiri::XML(self.mets)&lt;/p&gt;

&lt;h1 id=&quot;get-structmap--start-with-ordered-list&quot;&gt;get structMap … start with ordered list&lt;/h1&gt;
&lt;p&gt;ol = mets_doc.xpath(‘//mets:structMap/mets:div/mets:div[@TYPE=”OrderedList”]/mets:div’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)&lt;/p&gt;

&lt;h1 id=&quot;get-filesec&quot;&gt;get fileSec&lt;/h1&gt;
&lt;p&gt;files = mets_doc.xpath(‘//mets:fileSec/mets:fileGrp[@USE=”deliverables”]/mets:file’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’, ‘xlink’ =&amp;gt; ‘http://www.w3.org/1999/xlink’)
```&lt;/p&gt;

&lt;p&gt;Our mets:file references have two different identifiers in addition to a URN associated with them.  One identifier (@ADMID) is used by mets:techMD and the other (@ID) is usec by mets:structMap.  In order to easily work access both, I’m going to create a hash with both of these identifiers and grab our :&lt;/p&gt;

&lt;p&gt;```
files_hash = Hash.new&lt;/p&gt;

&lt;p&gt;files.each do |file|
  fid = file.xpath(‘string(@ID)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’, ‘xlink’ =&amp;gt; ‘http://www.w3.org/1999/xlink’)
  fadmid = file.xpath(‘string(@ADMID)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’, ‘xlink’ =&amp;gt; ‘http://www.w3.org/1999/xlink’)
  files_hash[fid] = fadmid
end&lt;br /&gt;
```
Ok, so it’s easy to get the label and order number from our structMap, and we can use that file_hash to get at the image dimensions to set on each canvas: &lt;/p&gt;

&lt;p&gt;```
ol.each do |item|
        label = item.xpath(‘string(@LABEL)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)
        order = item.xpath(‘string(@ORDER)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)
        item_id = item.xpath(‘string(mets:fptr/@FILEID)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    item_aid = files_hash[item_id]

    iw = &#39;//techMD[@ID=&quot;&#39; + item_aid + &#39;&quot;]//imageWidth/text()&#39;
    ih = &#39;//techMD[@ID=&quot;&#39; + item_aid + &#39;&quot;]//imageHeight/text()&#39;

    img_width = mets_doc.xpath(iw, &#39;mets&#39; =&amp;gt; &#39;http://www.loc.gov/METS/&#39;).to_s
    img_height = mets_doc.xpath(ih, &#39;mets&#39; =&amp;gt; &#39;http://www.loc.gov/METS/&#39;).to_s
	# let&#39;s print out the img_width to make sure this is working...
	puts img_width end ``` Uh oh!  Nothing!  Looking at the mets:techMD section I think there&#39;s a namespace issue in getting at our image dimensions:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;
&amp;lt;mets:techMD ID=&quot;uoma&quot;&amp;gt;
  &amp;lt;mets:mdWrap MDTYPE=&quot;NISOIMG&quot;&amp;gt;
    &amp;lt;mets:xmlData&amp;gt;
      &amp;lt;mix xmlns=&quot;http://www.loc.gov/mix/v20&quot; xsi:schemaLocation=&quot;http://www.loc.gov/mix/v20 http://www.loc.gov/standards/mix/mix20/mix20.xsd&quot;&amp;gt;
        &amp;lt;BasicImageInformation&amp;gt;
          &amp;lt;BasicImageCharacteristics&amp;gt;
            &amp;lt;imageWidth&amp;gt;5674&amp;lt;/imageWidth&amp;gt;
            &amp;lt;imageHeight&amp;gt;7200&amp;lt;/imageHeight&amp;gt;
          &amp;lt;/BasicImageCharacteristics&amp;gt;
        &amp;lt;/BasicImageInformation&amp;gt;
      &amp;lt;/mix&amp;gt;
    &amp;lt;/mets:xmlData&amp;gt;
  &amp;lt;/mets:mdWrap&amp;gt;
&amp;lt;/mets:techMD&amp;gt;
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Yes, there’s probably a better way to do this, but I don’t mind being a bit sloppy here in the interest of getting working code.  I’m going to clone the mets_doc and wipe out the namespaces for this one step:&lt;/p&gt;

&lt;p&gt;```
slop = mets_doc.clone
slop.remove_namespaces!&lt;/p&gt;

&lt;p&gt;ol.each do |item|
        label = item.xpath(‘string(@LABEL)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)
        order = item.xpath(‘string(@ORDER)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)
        item_id = item.xpath(‘string(mets:fptr/@FILEID)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    item_aid = files_hash[item_id]

    iw = &#39;//techMD[@ID=&quot;&#39; + item_aid + &#39;&quot;]//imageWidth/text()&#39;
    ih = &#39;//techMD[@ID=&quot;&#39; + item_aid + &#39;&quot;]//imageHeight/text()&#39;

    img_width = slop.xpath(iw, &#39;mets&#39; =&amp;gt; &#39;http://www.loc.gov/METS/&#39;).to_s
    img_height = slop.xpath(ih, &#39;mets&#39; =&amp;gt; &#39;http://www.loc.gov/METS/&#39;).to_s
	# let&#39;s print out the img_width to make sure this is working...
	puts img_width end ```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hooray! Now we can remove our puts statement and actually add all this data to the Canvas.  The full block would look like this:
```
      ol.each do |item|
        label = item.xpath(‘string(@LABEL)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)
        order = item.xpath(‘string(@ORDER)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)
        item_id = item.xpath(‘string(mets:fptr/@FILEID)’, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    item_aid = files_hash[item_id]

    iw = &#39;//techMD[@ID=&quot;&#39; + item_aid + &#39;&quot;]//imageWidth/text()&#39;
    ih = &#39;//techMD[@ID=&quot;&#39; + item_aid + &#39;&quot;]//imageHeight/text()&#39;

    img_width = slop.xpath(iw, &#39;mets&#39; =&amp;gt; &#39;http://www.loc.gov/METS/&#39;).to_s
    img_height = slop.xpath(ih, &#39;mets&#39; =&amp;gt; &#39;http://www.loc.gov/METS/&#39;).to_s

    canvas = IIIF::Presentation::Canvas.new()

    canvas[&#39;@id&#39;] = &quot;#{m[&#39;@id&#39;]}/canvas/#{order}&quot;

    canvas.width = img_width.to_i
    canvas.height = img_height.to_i
    canvas.label = label

    # put the code for grabbing images here

    m.sequences &amp;lt;&amp;lt; canvas
    self.manifest = m.to_json(pretty:false)
  end ```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, that is a long block.  In fact, we’re going to need to make it longer because in the same pass we are going to want to add the Images to the Canvas before adding it to &lt;code&gt;m.sequences&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;```
i_urn = ‘//mets:file[@ADMID=”’ + item_aid +’”]/mets:FLocat/@xlink:href’
img_id = mets_doc.xpath(i_urn, ‘mets’ =&amp;gt; ‘http://www.loc.gov/METS/’, ‘xlink’ =&amp;gt; ‘http://www.w3.org/1999/xlink’).to_s.sub(/^urn:pudl:images:deliverable:/,’’)&lt;/p&gt;

&lt;p&gt;i = IIIF::Presentation::ImageResource.new()&lt;/p&gt;

&lt;p&gt;i[‘@id’] = “http://libimages.princeton.edu/loris2/#{img_id}/full/#{img_width},#{img_height}/0/default.jpg”
i.format = “image/jpeg”
i.width = canvas.width
i.height = canvas.height&lt;/p&gt;

&lt;p&gt;r = IIIF::Presentation::Resource.new(‘@type’ =&amp;gt; ‘oa:Annotation’, ‘motivation’ =&amp;gt; ‘sc:painting’, ‘@id’ =&amp;gt; ‘#{canvas[“@id”]}/images’, ‘resource’ =&amp;gt; i)&lt;/p&gt;

&lt;p&gt;canvas.images « r&lt;/p&gt;

&lt;p&gt;```&lt;/p&gt;

&lt;p&gt;Ok, we have to do one more thing before we can have a workable IIIF Manifest: add the service information.  This should be rather simple as we just need to create a new resource that we stuff into the ImageResource, the same way we inserted the ImageResource into the Images Resource that lists ImageResources (I know, it gets crazy!).  Probably simpler to show:&lt;/p&gt;

&lt;p&gt;```
s = IIIF::Presentation::Resource.new(‘@context’ =&amp;gt; ‘http://iiif.io/api/image/2/context.json’, ‘profile’ =&amp;gt; ‘http://iiif.io/api/image/2/level2.json’, ‘@id’ =&amp;gt; “http://libimages.princeton.edu/loris2/#{img_id}”)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;    i = IIIF::Presentation::ImageResource.new()

    i[&#39;@id&#39;] = &quot;http://libimages.princeton.edu/loris2/#{img_id}/full/#{img_width},#{img_height}/0/default.jpg&quot;
    i.format = &quot;image/jpeg&quot;
    i.width = canvas.width
    i.height = canvas.height
    i.service = s ```
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So, what is this @context and profile stuff?  See this:
https://wiki1.hbz-nrw.de/display/SEM/2013/08/01/Sharing+context+-+publishing+application+profiles+with+JSON-LD&lt;/p&gt;

</description>
        <pubDate>Wed, 10 Jun 2015 00:00:00 -0400</pubDate>
        <link>http://sdellis.com/2015/06/10/spiiiffy.html</link>
        <guid isPermaLink="true">http://sdellis.com/2015/06/10/spiiiffy.html</guid>
        
        
      </item>
    
      <item>
        <title>On Booking</title>
        <description>&lt;p&gt;A friend recently asked me to join her in a proposal to manage the entertainment aspect of a club that will be opening soon.  She admired the work I did with Soupçon Salon, a successful local supper and music club that I ran for over five years.  We experimented and tweaked our approach throughout Soupçon’s lifespan, but much of the formula for our success was influenced by my experiences over the years as a working musician.  It’s a dream of mine to be able to book quality acts for an awesome venue, so here are some crumbs of wisdom.&lt;/p&gt;

&lt;p&gt;**Musicians First!
It may seem paradoxical, but when running a music venue, your clientele are not the patrons, the musicians are.  Musicians get treated like crap.  I can only imagine the thinking behind this is that we are a dime a dozen.  Everyone plays music these days, and many folks will play for free just to get heard.  The idea that musicians are expendable is the kiss of death for any entertainment venue.&lt;/p&gt;

&lt;p&gt;I have showed up to gigs where we didn’t go on until 1:00am (even though we were supposed to play at 10:00pm).  I have played gigs where our payment didn’t even cover the gas it took to get there.  I have played bars where we didn’t even get a free drink.  I might understand if we didn’t bring anyone through the doors, but these are shows where we actually had decent turnouts.  Not only will I never play those venues again, but I will make sure that none of my friends play those venues.&lt;/p&gt;

&lt;p&gt;At Soupçon we always treated the musicians with the respect they deserved, whether they were just starting out, or veterans of the local music scene.  One of the banes of a gigging musician is all the gear they have to lug around.  To free our performers of this burden, we made sure that the PA was set up in advance, so they could just arrive “Chuck Berry style”, with nothing more than a guitar in hand.  Other things that made a difference were making sure that someone was there to greet them and orient them when they arrived.  There was always food and drink set aside for them.   &lt;/p&gt;

&lt;p&gt;Because we let folks eat and converse for a while, and we marked the start of a performance with a heartfelt and informed introduction, there was no talking during the performances.  This level of intimacy is a lovely surprise to many local musicians who are often competing with an indifferent and loud bar crowd.&lt;/p&gt;

&lt;p&gt;Even though the musicians were always paid by tips alone, they often made more at Soupçon on a Monday night than they did in other venues on weekends.  This is because they did not have to ask the audience for money.  I, as the MC, would always wait for a good time to make an appeal (usually lightly rehearsed and customized) to the audience on their behalf.  Because there was a sense of camaraderie and a real community, the audience jumped at the opportunity to throw money in the hat.&lt;/p&gt;

&lt;p&gt;If you have just a few quality musicians who trust you, and you make their experience great, then you will never have to seek out another band.  Quality acts will be banging down your door.  The reason for this is because good musicians hang out with other good musicians, and word travels fast in those circles.  Your reputation in these circles is your greatest asset.&lt;/p&gt;

&lt;p&gt;**The Experience
Music is everywhere these days.  Anyone can see great performances on YouTube.  But what you can create in a club is a unique experience, and this is what you are selling.  Live music is so valuable because there’s an element of danger that cannot be edited out or curated away.  That creates energy in the room and often leads to magic.  Many musicians, even those who have played live for decades in front of sold out crowds, frequently told me that Soupçon was one of their best performance experiences ever.   &lt;/p&gt;

&lt;p&gt;At one point we had to move from an intimate, artsy French restaurant, to glorified deli.  While the owner of the deli was a wonderful person, incredibly accommodating, and really got the community aspect of it, the venue never felt like a great fit to me.  Despite the red curtain that went behind the musicians, the owner (who had fallen ill when we started) was not able to be there to oversee details and the staff was often reluctant to change things like lighting, or shut off the refrigeration temporarily so folks in the back could hear the music over the hum.  While we still filled most seats and had magical performances, something was lost about the experience.  Your reputation to deliver an incredible experience is almost as important as your reputation among musicians.&lt;/p&gt;

&lt;p&gt;**How to Select Musicians
The Musicians you select will depend on the size of the venue.  You want the venue to be packed, not (only) because it maximizes profits, but because the audience feels grateful to be there and generates energy – this is the best place to be at this moment, and the packed house reinforces that perception.  On the other hand, you don’t want to turn people away.  It only takes a couple of times of being turned away at the door before folks write it off.  So, the right balance is important.  &lt;/p&gt;

&lt;p&gt;But there are advantages to a small intimate space.  You can book people who are just starting out.  People love to be in early on someone’s career, to feel like they’ve discovered something, to have their finger on the pulse.  If you book someone who doesn’t have an audience yet, you have to be sold on them yourself, and then help sell them to your clientele.&lt;/p&gt;

&lt;p&gt;**Promotion Matters
The benefit of booking local musicians at this level is that they often bring out fans.  In fact, they should know how many people you expect them to bring (if they want to play again).  But you should never rely on musicians to bring out more than half the potential audience.  This is a collaboration, and it’s not only a service to the musicians to relieve some of the pressure of “the draw”, but it ensures you don’t have all your eggs in one basket and will make money even if the musician didn’t do a great job of promotion or is just starting out and has a limited audience.&lt;/p&gt;

&lt;p&gt;As with the event experience, details in the promotion matters.  At this level, you will be lucky if the bands have their own websites and tracks online.  The way in which you describe the musician needs to convince an audience who has never heard them that they are worth the trip.  This requires quite a large breadth of musical knowledge so that you can make appropriate comparisons and pique some interest.  If it’s a walking town, posters go a long way.  Offer to post flyers if the band prints them, or find other ways of sharing the promotional labor.&lt;/p&gt;

&lt;p&gt;**Cultivating an Audience
As mentioned earlier, many venues depend on the performers to draw the audience.  While I agree that performers should draw their share, the experience and reputation of your venue should get people to show up even when they have no idea who is performing.  The value that you are providing is much more than entertainment and nourishment – it’s community and a connection with the underground zeitgeist.  With the growth of a more secular society and waning of religious communities, this has often been called a “Third Space”, which is where people go to meet with others outside the formal context of work or the intimacy of home.  The MC has the responsibility to introduce herself to any new faces and make them feel welcome.&lt;/p&gt;

&lt;p&gt;***The Price is Right
Remember, your clientele are musicians.  You do not want to price out the artists.  The artists are what give your venue its edge and life, so if they can’t afford to be there on a regular basis, you are going to become a crusty old sell out. I won’t judge if you want to take that road, but just know that you will lose many of the benefits you get from having artists in your audience and you will have to work twice as hard to get your audience out.  When you charge a small amount for dinner and allow the artists to tip the other artists, you don’t get complaints when things aren’t perfect, and if you do… well, what do you expect for $15?&lt;/p&gt;

&lt;p&gt;***Tickets or Not?
Furthermore, I would not sell tickets unless you are expecting a lot of out of town guests.  You don’t want people to have to drive even a short distance only to get turned away at the door.  Tickets really complicate things.  You have the overhead of the ticketing system, lost tickets, refunds, and you don’t get that nice line outside the door that serves to alert others in the commuity that something cool is going on here.&lt;/p&gt;

&lt;p&gt;***Hipness&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Jul 2014 04:53:05 -0400</pubDate>
        <link>http://sdellis.com/music/blogging/2014/07/12/on-booking.html</link>
        <guid isPermaLink="true">http://sdellis.com/music/blogging/2014/07/12/on-booking.html</guid>
        
        
        <category>music</category>
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>King of My Own Domain On a Pauper’s Budget</title>
        <description>&lt;p&gt;Alternate Title: How To Create Your Own Website For Next to Nothing&lt;/p&gt;

&lt;p&gt;For a long time, home ownership was a key indicator of fulfillment of the American Dream.  We believe we’ve achieved a certain level of “success” when we can entertain the idea of taking down a wall or running a speaker system to every room in the house.  To some degree, the online equivalent is to have our own address, or in web-speak, our own domain.  &lt;/p&gt;

&lt;p&gt;While no one ever had to take out a mortgage to have their own domain, a lot of people pay in the ballpark of $100/year for a decent hosting plan for their personal site or small business.  As a technologist, I was paying nearly $30/month for a VPS with command-line access.  Initially, I wanted the freedom to install whatever I wanted without the normal restrictions found in shared hosting environments, but it turned out that I was barely even updating my own content.  I also wasn’t installing much of anything since I don’t really find system administration to be that much fun, and feared an install-gone-bad might jeopardize friends’ sites that I hosted and imprison me to a weekend of server reconstruction.  While I know there are cheaper plans out there, the point is that I was paying way more than I needed.  If you have your own domain, you probably are too.&lt;/p&gt;

&lt;p&gt;One of my New Year’s resolutions was to journal about my experiences and interests, which includes blogging anything I want to have an audience for.  I have known about GitHub Pages for a while and have been trying to find the time, but mostly work up the courage, to migrate my personal site, sdellis.com, and my band site, highhearts.com off the VPS and over to GitHub Pages.  I get my email through sdellis.com, and it is essentially my lifeline to the Internet.  As a barely amateur sysadmin, I didn’t feel confident in debugging any problems with my DNS and risk not having access to my email for however long it takes me to stumble through my own ignorance by trial and error and Google-fu.&lt;/p&gt;

&lt;p&gt;I finally gathered up the courage, and I don’t know why I didn’t do this sooner.  It was so easy, but I have to attribute most of the ease to the four tools I used: Google Apps, GitHub Pages, Jekyll, and DNSimple.  So, I am now running two of my own personal domain with website, email, blogging, calendar, etc. for $3/month plus domain registration costs (under $10/year each).  All of these services are fairly well-documented, so I won’t go into detail about how to set them up unless I get lots of requests to do so. However, I will say that I attribute most of my courage to finally pull the trigger to DNSimple’s “One-Click Services” feature, which made all the DNS work painless.  Well-played, DNSimple (and no, I’m not affiliated). &lt;em&gt;golf clap&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now what was I going to do again?  Oh yes, start blogging…&lt;/p&gt;

</description>
        <pubDate>Fri, 07 Feb 2014 09:29:20 -0500</pubDate>
        <link>http://sdellis.com/tech/blogging/2014/02/07/king-of-my-own-domain-on-a-paupers-budget.html</link>
        <guid isPermaLink="true">http://sdellis.com/tech/blogging/2014/02/07/king-of-my-own-domain-on-a-paupers-budget.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>The Ideal UX Desiger</title>
        <description>&lt;p&gt;There have been a recent spat of questions and job postings on the Code4Lib listserv around User Experience Design, and after all these years of user blaming, it is nice to see a growing appreciation for UX in the Libraries domain.  While librarians ARE a subset of library users, they’ve had too much influence, and have unfortunately brought bias to the design process that has created obstacles for the broader user base.  &lt;/p&gt;

&lt;p&gt;People I talk to often confuse Usability with User Experience.  The way I see it, Usability skills are a subset of User Experience.  If you can hire two people, awesome.  If I had to choose one, I would opt to fill a User Experience role. It is at least one full-time job, ideally of higher rank due to its “big picture” nature.  I like the idea of a usability committee or working group, with the UX expert as a chair.&lt;/p&gt;

&lt;p&gt;Below are a few skills/abilities of my ideal User Experience Designer. It’s unlikely you will get them all in one candidate, but it may give you an idea of which niches you need to fill, given your current team:&lt;/p&gt;

&lt;h2 id=&quot;creativity-and-audacity&quot;&gt;Creativity and Audacity&lt;/h2&gt;
&lt;p&gt;Design is inherently mixed with organization and culture, and in order to solve design problems a UX designer has to be willing to rethink and change long-standing traditions and culture.  This person must be able to question EVERYTHING without being abrasive.&lt;/p&gt;

&lt;h2 id=&quot;diplomacy-and-influence&quot;&gt;Diplomacy and Influence&lt;/h2&gt;
&lt;p&gt;You can’t do the above without being good at building relationships, forming consensus, negotiating, etc.  Ideally the position would have enough power in the org to be at the table for major decisions, but then again, influence does not always come from hierarchical rank.&lt;/p&gt;

&lt;h2 id=&quot;usability-interviewing-testing-and-analytics&quot;&gt;Usability Interviewing, Testing, and Analytics&lt;/h2&gt;
&lt;p&gt;Understanding, empathizing with, and advocating for ALL the users of your systems is critical, and collecting data to form and back up your arguments is a prerequisite. UX people have to talk to users about their goals, test ideas with prototypes, and collect and interpret stats/analytics. Testing is not only about whether a feature could be improved, but whether it should be there at all.  This person can identify and prioritize the right problems to solve.&lt;/p&gt;

&lt;h2 id=&quot;visual-thinkingliteracy&quot;&gt;Visual Thinking/Literacy&lt;/h2&gt;
&lt;p&gt;The person should have a good design sense, and be able to put the elements and principles of design to work in the idea pitch, information architecture, and design process.&lt;/p&gt;

&lt;h2 id=&quot;content-strategy&quot;&gt;Content Strategy&lt;/h2&gt;
&lt;p&gt;What is the overall vision of the org and how is that message delivered?  What message is currently being delivered via neglect of an overall strategy?  The lack of a content strategy is one reason why so many library websites are filled with pages that are piles of links.&lt;/p&gt;

&lt;h2 id=&quot;interaction-design&quot;&gt;Interaction Design&lt;/h2&gt;
&lt;p&gt;In libraries, where budgets can be an issue, this person should be able to put together wireframes, prototypes, and final HTML/CSS/JS designs. As Tom mentioned, this could be an entirely different, more technical position, but it’s a great asset if you can find it.&lt;/p&gt;

&lt;p&gt;-Shaun&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Oct 2013 10:29:20 -0400</pubDate>
        <link>http://sdellis.com/tech/blogging/2013/10/30/ideal-ux-position.html</link>
        <guid isPermaLink="true">http://sdellis.com/tech/blogging/2013/10/30/ideal-ux-position.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
      </item>
    
  </channel>
</rss>
