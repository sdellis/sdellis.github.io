<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shaun David Ellis</title>
    <description>Thoughtful UX Developer.
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 06 Jul 2017 15:58:08 -0400</pubDate>
    <lastBuildDate>Thu, 06 Jul 2017 15:58:08 -0400</lastBuildDate>
    <generator>Jekyll v3.4.3</generator>
    
      <item>
        <title>Creative Coding</title>
        <description>&lt;p&gt;When my eleven year old came downstairs and asked if I wanted to check out the video game
he made, I was skeptical but intrigued. I went upstairs and played his game called “Dragon Flier 3”.  I will admit that, as a first try, it was not the most compelling game. However, I was still completely floored that I could control a flying dragon, summon fireballs that I could also control, gobble a power-up, and fight a boss at the end.  I was most impressed by the fact that he figured it all out on his own by following the online tutorials.  He was downright giddy as he overflowed with feelings of empowerment and accomplishment, which reminded me why I became a programmer.  Ladies and gentlemen, behold: there be dragons! (FYI - You need the Flash Plugin, Scratch’s only downside.)&lt;/p&gt;

&lt;iframe allowtransparency=&quot;true&quot; width=&quot;485&quot; height=&quot;402&quot; src=&quot;//scratch.mit.edu/projects/embed/133918118/?autostart=false&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;His younger brother, age nine, is also now making games.  They even got me to make a game.  I decided to capitalize on their intrinsic motivation and made an educational game that allows the nine-year-old to study his multiplication tables without me having to hold the flash cards for him:&lt;/p&gt;

&lt;iframe allowtransparency=&quot;true&quot; width=&quot;485&quot; height=&quot;402&quot; src=&quot;//scratch.mit.edu/projects/embed/135708226/?autostart=false&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;And of course, &lt;a href=&quot;https://scratch.mit.edu/projects/135845129/&quot;&gt;they have already “remixed” it&lt;/a&gt; to include laser beams that shoot out of the alien’s eyes and explode the player’s remaining lives on every incorrect answer. If it gets them to both learn to code and learn their multiplication tables, I’ll take it.&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 15 Dec 2016 09:29:20 -0500</pubDate>
        <link>http://localhost:4000/tech/education/2016/12/15/creative-coding.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/education/2016/12/15/creative-coding.html</guid>
        
        
        <category>tech</category>
        
        <category>education</category>
        
      </item>
    
      <item>
        <title>Kinetic Constellations</title>
        <description>&lt;p&gt;If you’ve ever seen Bret Victor’s &lt;a href=&quot;https://www.youtube.com/watch?v=PUv66718DII&quot;&gt;Inventing on Principle talk&lt;/a&gt; (or any of his talks, really) then you will know about the challenges of designing with code.  In general, the abstraction of code can be a huge barrier to people who may otherwise be inclined towards interface design as a vocation. In my last post, I spoke about Personal User Interfaces as a way of bridging that abstraction gap.  I even designed a quick-and-dirty interface for creating “kinetic constellations” with the GreenSock JavaScript Library.  Well, this is an update to say that I have been working towards more reusable UI’s in the form of composable web components.  Not only did I use this more refined UI for a library book locator project, but I was also able to use it to create a &lt;a href=&quot;http://sdellis.com/svg-draw-component/examples/gif.html&quot;&gt;more stable UI for creating “kinetic constellations”&lt;/a&gt; and taught others to use it to create their own animations at &lt;a href=&quot;http://eduiconf.org/sessions/javascript-animation/&quot;&gt;EdUI 2016&lt;/a&gt;.  Here’s an animation I made at that workshop:&lt;/p&gt;

&lt;p data-height=&quot;399&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;PGLLwx&quot; data-default-tab=&quot;result&quot; data-user=&quot;sdellis&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Thriller Night SVG Constellation Animation&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/sdellis/pen/PGLLwx/&quot;&gt;Thriller Night SVG Constellation Animation&lt;/a&gt; by Shaun Ellis (&lt;a href=&quot;http://codepen.io/sdellis&quot;&gt;@sdellis&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;Can you guess who it is?&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Tue, 08 Nov 2016 09:29:20 -0500</pubDate>
        <link>http://localhost:4000/tech/blogging/design/animation/2016/11/08/kinetic-constellations.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/design/animation/2016/11/08/kinetic-constellations.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
        <category>design</category>
        
        <category>animation</category>
        
      </item>
    
      <item>
        <title>Personal User Interfaces</title>
        <description>&lt;p&gt;Many years ago, I remember learning about how little data the human mind needs before it starts to fill in the blanks to interpret what it’s seeing. I was introduced to the biological motion demos created by George Mather in an Information Visualization class way back in 2010.  I was disappointed to discover the site that hosts them is no longer available. You can at least &lt;a href=&quot;https://web.archive.org/web/20071212222117/http://www.lifesci.sussex.ac.uk/home/George_Mather/Motion/BM.HTML&quot;&gt;read about the original example&lt;/a&gt;, and through the process I describe in this post (spoiler alert!), I have &lt;a href=&quot;http://codepen.io/sdellis/pen/xVYMJj&quot;&gt;recreated the effect at CodePen&lt;/a&gt; as a “constellation animation”.&lt;/p&gt;

&lt;p data-height=&quot;266&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;xVYMJj&quot; data-default-tab=&quot;js,result&quot; data-user=&quot;sdellis&quot; data-embed-version=&quot;2&quot; data-preview=&quot;false&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/sdellis/pen/xVYMJj/&quot;&gt;SVG Running Horse Constellation Animation&lt;/a&gt; by Shaun Ellis (&lt;a href=&quot;http://codepen.io/sdellis&quot;&gt;@sdellis&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr style=&quot;margin: 25px 0px 25px 0px;&quot; /&gt;

&lt;h2 id=&quot;the-evolution-of-web-animation&quot;&gt;The Evolution of Web Animation&lt;/h2&gt;
&lt;p&gt;Animation is a powerful 4th-dimension communication tool that can tell a story, convey meaning, signal transitions, draw attention, and show changes to data over time. Animation on the internet is almost as old as the internet itself, although it’s had a dip in popularity with only a recent resurgence as the interest in Interaction Design has grown.&lt;/p&gt;

&lt;p&gt;Many of us have been doing this long enough to remember the excesses of Macromedia’s (and then Adobe’s) Flash technology. Flash provided simple visual tools for designers to create motion graphics in websites. Animation as a design element was often abused via infamous “splash” pages, blinking icons, and overzealous button states.  More often than not, such gratuitous “bling” got in the way of the users and only worsened Flash’s bad reputation, which along with several other shortcomings – and &lt;a href=&quot;http://www.apple.com/hotnews/thoughts-on-flash/&quot;&gt;one famous snub&lt;/a&gt; – led to Flash’s ultimate demise.&lt;/p&gt;

&lt;p&gt;In the years since there has been a renaissance of open web technologies. I have been eager to test the limits of HTML5 Canvas, CSS, and SVG animations and figured that recreating one of George Mather’s simple animations would be relatively easy to start with. I thought back to the animated dots and how it was essentially a moving constellation.  Then I thought it would be fun to bring the night sky to life by animating custom constellations.&lt;/p&gt;

&lt;p&gt;As I began my research, I stumbled across this animation of a “polylion” (below) and had no idea that the state of JavaScript animation was so sophisticated.  This work used GreenSock’s TweenMax animation library, and I noticed a few other impressive animations that used this library as well and started to play.  I soon realized that the API was conceptually similar to how one might construct animations on Timelines in Flash, but without the interface that came bundled with Flash.&lt;/p&gt;

&lt;p data-height=&quot;266&quot; data-theme-id=&quot;dark&quot; data-slug-hash=&quot;RNLgJP&quot; data-default-tab=&quot;html,result&quot; data-user=&quot;grayghostvisuals&quot; data-embed-version=&quot;2&quot; data-preview=&quot;true&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/grayghostvisuals/pen/RNLgJP/&quot;&gt;SVG Low PolyLion: Animated Polygons&lt;/a&gt; by GRAY GHOST (&lt;a href=&quot;http://codepen.io/grayghostvisuals&quot;&gt;@grayghostvisuals&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr style=&quot;margin: 25px 0px 25px 0px;&quot; /&gt;

&lt;h2 id=&quot;personal-user-interfaces&quot;&gt;Personal User Interfaces&lt;/h2&gt;
&lt;p&gt;In order to animate my dots, I would need to plot their coordinate values on a X/Y axis, and then plug these into my code.  An animation like I was planning would be impossible to create without a graphical interface and some instant feedback mechanism. Furthermore, in order to get the nuances that I saw in the original animation, I would have to trace the movement of each joint in each frame on top of a moving being!&lt;/p&gt;

&lt;p&gt;I decided that I needed to build an interface that would let me visually plot and animate the dots on top of each frame of an animation. It would need to also allow me to move the dots visually, and would then write the code for me.&lt;/p&gt;

&lt;p&gt;Luckily, I discovered libgif-js and was able to control a GIF animation with “video-like” controls. This worked well as I could step through each frame, but I needed to overlay an SVG canvas that would let me add dots by clicking on the image. I tried to use standard HTML5 and jQuery for this, but working with SVG is a little different from working with standard DOM elements. I had to do some backflips to be able to add SVG dots to the canvas. I also had trouble with HTML5 standard “draggable” commands.  Now that I have discovered GreenSock’s TweenMax has “Draggable” utility, I probably will try using that, but for the initial draft, I used &lt;a href=&quot;http://snapsvg.io/&quot;&gt;Snap&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The result is &lt;a href=&quot;/labs/animation-tool&quot;&gt;a first pass at a simple user interface to generate my animations&lt;/a&gt;. There are a number of bugs that I need to address, but if you don’t scroll or resize while you are plotting the dots you can quickly make an animation as demonstrated in &lt;a href=&quot;http://quick.as/egr7cbvkx&quot;&gt;this short video&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course, you need to do this for every frame in the sequence, but once you are done, you can click the “Show the Code” button, copy and paste into the appropriate places in &lt;a href=&quot;http://codepen.io/sdellis/pen/EKLqrx&quot;&gt;this Codepen template&lt;/a&gt; and voilà! A constellation animation!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/animation-interface.jpg&quot; alt=&quot;Animation Interface&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;Screen shot of the simple interface tool.&lt;/span&gt;&lt;/p&gt;

&lt;h2 id=&quot;next-steps&quot;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;There are so many ways it can go, but my immediate next steps include refining the interface, adding better styles, and squashing some of the scrolling/resize bugs.  I would also like it to generate the final animation preview right in the interface/app, without having to rely on CodePen.  Adding onion-skinning (increased dot opacity on either side of the current frame) would make it much easier to trace the joints. Obviously, it would be great if people could upload their own GIFs as it doesn’t work cross-domain for security purposes.  Finally, it would be great to extend this beyond dots and allow animators to create layers of polygons and other shapes for expanded design element options.&lt;/p&gt;

&lt;p&gt;The ability to create personal interfaces that simplify your tasks (or even make them possible) is incredibly empowering.  You also don’t always need to make a polished product if it meets your goals and you know how to use it.  Most of us UI developers are so busy developing awesome front ends for others that we forget we can create interfaces for ourselves to get the output we want from the computer.&lt;/p&gt;

&lt;hr /&gt;
</description>
        <pubDate>Thu, 14 Apr 2016 10:29:20 -0400</pubDate>
        <link>http://localhost:4000/tech/blogging/design/2016/04/14/personal-user-interfaces.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/design/2016/04/14/personal-user-interfaces.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
        <category>design</category>
        
      </item>
    
      <item>
        <title>Introducing Tabula Rasa</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://github.com/sdellis/tabula-rasa&quot;&gt;Tabula Rasa&lt;/a&gt; is a node.js “base library” for working with &lt;a href=&quot;http://iiif.io/api/presentation/2.0/&quot;&gt;IIIF Presentation API&lt;/a&gt; resources (i.e., collections, manifests, canvases, etc.). It was originally developed for &lt;a href=&quot;https://github.com/sdellis/tabula&quot;&gt;Tabula&lt;/a&gt;, a “starter kit” for building all sorts of useful native web apps that work with IIIF APIs. However, it can just as easily be used on the server to create and edit IIIF Presentation API resources.&lt;/p&gt;

&lt;p&gt;Tabula Rasa uses &lt;a href=&quot;https://ampersandjs.com/&quot;&gt;Ampersand.js&lt;/a&gt; models and collections to make writing client side IIIF applications as simple as possible.  Ampersand is based heavily on Backbone.js, and anyone familiar with Ruby on Rails (or any other MVC framework) will also be very comfortable using it.  It is a npm module (node for “ruby gem”), making it super easy to bundle into browser-based apps built with Webpack.  It is also future-ready since it’s written in ES2015, and has ever-growing test coverage.&lt;/p&gt;

&lt;h2 id=&quot;show-dont-tell&quot;&gt;Show, Dont’ Tell.&lt;/h2&gt;
&lt;p&gt;Tabula got its name because it is intended to emphasize evidence in slideshow presentations.  The name &lt;em&gt;tabula&lt;/em&gt; (latin for slate or tablet) was selected as a “namespace” for a suite of similar applications because it is a tablet with many possibilities.  The notion of &lt;em&gt;tabula rasa&lt;/em&gt; (“clean state” or “blank tablet”) connotes a view of mind as originally blank, on which experience leaves marks.  This notion is the basis of Empiricism and ultimately, the scientific method.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/bacon-aphorism.jpg&quot; alt=&quot;&amp;quot;Aphorism I.&amp;quot;&amp;quot; From Bacon's Novum organum (1620).&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;“Man, being the servant and interpreter of Nature, can do and understand so much and so much only as he has observed in fact or in thought about the order of Nature: beyond this he neither knows anything nor can do anything.”- Sir Francis Bacon, “Aphorism I.” From Novum organum (1620).&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;If Empiricism is true, then it must be possible to learn anything. As an artist who learned to draw from &lt;a href=&quot;http://www.amazon.com/Drawing-Right-Side-Brain-Definitive/dp/1585429201&quot;&gt;a book&lt;/a&gt;, and has read about &lt;a href=&quot;https://en.wikipedia.org/wiki/Outliers_(book)&quot;&gt;10,000 hours of practice&lt;/a&gt;, I believe it is possible to learn anything regardless of perceived talent. However, finding a good mentor is crucial to growth, and instructional tools, style, and techniques can make a huge difference in cognition and confidence in a field of study.&lt;/p&gt;

&lt;h2 id=&quot;cognitive-style-in-software&quot;&gt;Cognitive Style in Software&lt;/h2&gt;
&lt;p&gt;In 2006, Edward Tufte published a &lt;a href=&quot;http://www.edwardtufte.com/tufte/books_pp&quot;&gt;polemic on PowerPoint&lt;/a&gt;, lamenting the fact that the medium had a tendency to hide evidence rather than emphasize it. Tufte argues that PowerPoint imposes a style that reduces the intellectual level of the content passing through the program.  He lists several problems that occur with the default PP presentation format: &lt;em&gt;foreshortening of evidence and thought, low spatial resolution, a hierarchical single-path structure of organization, breaking up of narratives and data into minimal fragments, branding of slides with logos, and a smirky commercialism that turns information into a sales pitch and presenters into marketeers,&lt;/em&gt; to name a few of his criticisms.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/war-is-peace.jpg&quot; alt=&quot;War is Peace, Freedom is Slavery, Ignorance is Strength&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;“The cognitive style of PowerPoint is familiar to readers of Orwell’s remarkable and prescient novel 1984” - Edward Tufte&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;Tufte offers a handful of suggestions for an improved technical reporting tool of the future, such as &lt;em&gt;a variety of page and screen layout templates, publication quality visualizations and data tables, scientific notation and typography, annotated measurement scales in images, open-document non-proprietary formats, and high resolution printing&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Tabula is my attempt to address these suggestions, although Tufte makes a tall order and I am starting with baby steps.  Tabula wasn’t supposed to simply be a starter kit.  In fact, when it is fully compliant with the IIIF specs, I intend to “freeze” it (perhaps with a new name) and move onto my original idea, which is a IIIF-based slideshow application. The first iteration of this slideshow application is meant to emphasize evidence through &lt;strong&gt;four different approaches&lt;/strong&gt;, listed below with possibly more to come.&lt;/p&gt;

&lt;h3 id=&quot;1-revelation&quot;&gt;1. Revelation&lt;/h3&gt;
&lt;p&gt;Most people are familiar with the “Ken Burns effect”, the slow image zooming and panning technique that was popularized in the Civil War documentaries. Variations of this technique not only create movement that can hold an audiences’ attention, but they can be used to reveal certain information within a scene, sometimes revealing the bigger picture, and sometimes revealing greater detail.  We can also think of a faster version of this technique as another approach to revelation, serving as a “tour” around details of an image that help us connect the dots of what we are looking at.  Finally, a simple “controlled scroll” could be used to provide a non-slippy interface to a resource that must be larger than the viewport to read comfortably.&lt;/p&gt;

&lt;h3 id=&quot;2-comparison&quot;&gt;2. Comparison&lt;/h3&gt;
&lt;p&gt;There are two approaches to comparison of images.  The first is to situate two or more images side by side, making it easy to compare and contrast characteristics. The other is to provide an overlay of images that can be set to have different transparency values. Of course, there’s no reason that the Revelation techniques described above couldn’t be applied to Comparison-based slide templates.&lt;/p&gt;

&lt;h3 id=&quot;3-data-and-visualization&quot;&gt;3. Data and Visualization&lt;/h3&gt;
&lt;p&gt;One of the problems with PowerPoint that Tufte points out is the fact that the resolution is too low to reveal any meaningful data, and authors must resort to simple bullet points to get their point across. The ability to add dynamic, interactive visualizations to slides, or to zoom in on high resolution static visualizations is key to emphasizing data and evidence in an argument.&lt;/p&gt;

&lt;h3 id=&quot;4-dialogue&quot;&gt;4. Dialogue&lt;/h3&gt;
&lt;p&gt;Finally, the ability to have a discussion through annotations (synchronously or asyncronously) is as important as the ability to observe when it comes to understanding. The ability to filter comments and questions based on reputation, institution, or other criteria can help determine the authority of a commentator. And because citations are “free” and automatic with IIIF resources, we can always gauge the authenticity of the resource and how credible it may be. All slides enable annotations in the form of text, audio, video, and drawing directly on the canvas.&lt;/p&gt;

&lt;p&gt;Making Tabula compliant with IIIF APIs is a huge part of making this a reality.  While the above techniques would be possible without IIIF, and modern slideshow apps like Reveal.js offer more features than PowerPoint, easy access to good content cannot be understated, and that is the promise of IIIF.  The ability to create presentations from interoperable content held at renowned institutions of learning makes it easy for instructors to incorporate centuries of rich cultural and scientific history into their lessons and presentations. (In case there is any question, I should mention that instructors can always add their own non-IIIF content as well.)&lt;/p&gt;

&lt;h2 id=&quot;inventing-the-universe&quot;&gt;Inventing the Universe&lt;/h2&gt;
&lt;p&gt;Coming full circle, before I could move forward with Tabula, I had to create a base library that would let me (and others) create IIIF collections, manifests, canvases and such on the client simply by a single line in my package.json file.  To be clear, I don’t claim to be inventing the universe on my own here.  There are lots of smart people creating pieces of the puzzle.  For example, &lt;a href=&quot;http://blog.edsilv.com/manifesto/&quot;&gt;Manifesto&lt;/a&gt; is a great client-side library that is also available as a npm module, but it does not yet allow you to create, only read manifests. &lt;a href=&quot;https://github.com/IIIF/iiif-prezi/&quot;&gt;Other&lt;/a&gt; &lt;a href=&quot;https://github.com/IIIF/osullivan/&quot;&gt;libraries&lt;/a&gt; are server-side only.  If I was going to allow people to create slideshows that are IIIF compliant, then I needed to offer a way to do it.  I am happy to introduce Tabula Rasa, a base library for building IIIF-compliant Native Web Apps (aka, single page web apps).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/carl-sagan.jpg&quot; alt=&quot;Carl Sagan's Apple Pie Recipe&quot; /&gt;
&lt;span class=&quot;caption&quot;&gt;“If you want to make an apple pie, you must first invent the universe.” - Carl Sagan&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;I was heavily influenced by &lt;a href=&quot;https://joreteg.com/&quot;&gt;Henrik Joreteg’s&lt;/a&gt; book &lt;a href=&quot;http://humanjavascript.com/&quot;&gt;Human JavasScript&lt;/a&gt; when creating Tabula and Tabula Rasa.  Empiricists like me believe that everyone can learn to code, and if you’re just learning to write JavaScript, I cannot recommend this book enough.  Read more about Tabula Rasa on the &lt;a href=&quot;https://github.com/sdellis/tabula-rasa&quot;&gt;GitHub page&lt;/a&gt;, test it out, and let me know what you think. The future is a blank slate!&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Dec 2015 09:29:20 -0500</pubDate>
        <link>http://localhost:4000/tech/blogging/javascript/iiif/2015/12/30/introducing-tabula-rasa.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/javascript/iiif/2015/12/30/introducing-tabula-rasa.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
        <category>javascript</category>
        
        <category>iiif</category>
        
      </item>
    
      <item>
        <title>Anarchists' Codebook</title>
        <description>&lt;p&gt;&lt;a href=&quot;http://2016.code4lib.org&quot;&gt;Code4Lib&lt;/a&gt; has been putting on conferences for over a decade, and this year I have the opportunity to be among the key organizers.  The popularity of the annual conference has grown steadily over the years, and we expect to max out at 450 attendees this year. What is unique about Code4Lib is that there is no organization.  There is no leadership or hierarchy.  There is no “headquarters” or geographical ties.  There is no legal entity.  It’s just a name that refers to a widely distributed group of people – a large and ever expanding group of people – who are interested in open source technology solutions to library, museum, and archives problems. Any effort expended on Code4Lib is 100% volunteer driven.  In short, Code4Lib is an anarchy, in the best sense of the word.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/img/c4l_site.jpg&quot; alt=&quot;Code4Lib 2016 Conference website landing page&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Design for the new Code4Lib Conference site.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;And while I find it amazing that we continue to put on great conferences, publish an academic journal, and serve as a kind of technical help-desk for our peers, this lack of structure has made it increasingly challenging for conference organizers.  One of the big problems is that we can’t pay for even basic things on our own.  In order to put on conferences we must find a fiscal host each year willing to sign contracts and make up-front payments.  We also depend on sponsors to help keep the registration costs down, and make the conference experience as enjoyable as possible.  Up until recently we depended on volunteers to host our conference website.&lt;/p&gt;

&lt;p&gt;We are incredibly grateful to the folks at Oregon State University (OSU) who have been volunteering for over ten years to host our site, but the downside is that they have day jobs just like the rest of us.  As a result, Code4Lib comes nowhere close to being a priority among all the demands of anyone’s employer.  As any web developer knows, no public-facing app is ever safe from security threats, updates, patches, and just plain old evolving trends and standards that make a site feel relevant.  This poses a problem because a distributed community cannot have a single point of failure.  We cannot put the kind folks at OSU in the position of subservience to the group.  At the same time, we need to move forward, and it’s hard to get sponsors for a technology conference when the site looks and performs in a way that does not meet modern standards and conventions.  Our communal wiki did not even come close.&lt;/p&gt;

&lt;p&gt;A redesign was in order.  Our goals were to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Empower all members of the community to contribute to the development and content of the site&lt;/li&gt;
  &lt;li&gt;Bring the performance, design, and user experience up to modern expectations&lt;/li&gt;
  &lt;li&gt;Gather structured data for workshops, proposals, speakers, testimonials, even gatherings.&lt;/li&gt;
  &lt;li&gt;Use the code4lib.org domain to add authority to the site&lt;/li&gt;
  &lt;li&gt;Host the site for free&lt;/li&gt;
  &lt;li&gt;Get as many sponsors as possible&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;hosting&quot;&gt;Hosting&lt;/h2&gt;
&lt;p&gt;Due to the community’s familiarity with and widespread adoption of GitHub, we thought GitHub Pages and Jekyll would be a great way to host the site for free and allow community collaboration.  They allowed us to use our custom domain, and the hardest part of the process was getting the OSU folks to find the time to make a  DNS change so we could use &lt;a href=&quot;http://2016.code4lib.org&quot;&gt;2016.code4lib.org&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;design&quot;&gt;Design&lt;/h2&gt;
&lt;p&gt;The old wiki had navigation that evolved organically, and it simply did not work for a conference site.  Furthermore, it was slow and not up to current accessibility standards.  The wiki was the opposite of forward-thinking web technologies, and did not represent the groudbreaking work members of the community did for a living.  The design process involved little more than looking at conventions for conference websites, and designing something that fit that structure.  When it came to the potentially subjective stuff (picking fonts, colors, icons, etc.) I received some good critiques, but in the spirit of Code4Lib, was mostly free to implement what I thought would work and have a little fun while I was at it. (I am particularly  pleased with the parody on the famous LOVE sculpture found in Philly’s Love Park.)&lt;/p&gt;

&lt;h2 id=&quot;badges-of-distinction&quot;&gt;Badges of Distinction&lt;/h2&gt;
&lt;p&gt;One thing that has always irked me about Code4Lib is that the sponsors seemed somewhat removed from the community.  While everyone wore the sponsor logos on their conference t-shirts, you didn’t necessarily know who was supporting the conference while you were mingling.  Having the “Badges of Distinction” printed on name tags is a great way to put a face to an impersonal logo, is a great conversation starter, and reinforces the fact that we hold our sponsors in high regard.  Sponsors often want to interact with the community, ask them for feedback on products, and even do some recruiting to fill gaps in their own teams.  I would rather have this kind of visibility any day over a keychain or brochure in the conference swag bag.  &lt;a href=&quot;http://2016.code4lib.org/prospectus.html#General-Sponsorship&quot;&gt;Here are the badges I came up with&lt;/a&gt;, easily re-usable icons for “gamification motivators” in other projects I’m working on.&lt;/p&gt;

&lt;h2 id=&quot;structured-data&quot;&gt;Structured Data&lt;/h2&gt;
&lt;p&gt;We wanted to allow the community to contribute nominations for keynote speakers or talk/workshop proposals without having to make a pull request.  The process had to be as simple as possible, and we need the data to be structured to make it easy to load into our Diebold-o-tron voting app since all content-oriented conference decisions are decided democratically by the community.  Github’s static site generator, Jekyll, has a way to use structured data when building a site, but we needed a more user friendly way than a “pull request” to collect that data.  In the end, we were able to create Google Forms that saved user contributed data to Spreadsheets in a structured way.  With Sheetsu, &lt;a href=&quot;http://roastduckalamode.github.io/fromSheetsToJekyll/&quot;&gt;@roastduckalamode devised a way to turn the spreadsheets into YAML&lt;/a&gt;.  This will serve us well when we have our final speakers and schedule.  However, we need to display the data in real-time so that users know that they are not submitting a duplicate talk.  Using &lt;a href=&quot;https://github.com/jsoma/tabletop&quot;&gt;Tabletop.js&lt;/a&gt; &lt;a href=&quot;https://github.com/bibliotechy&quot;&gt;@bibliotechy&lt;/a&gt; and &lt;a href=&quot;https://github.com/roastduckalamode&quot;&gt;@roastduckalamode&lt;/a&gt; came up with a fairly performant way to &lt;a href=&quot;http://2016.code4lib.org/proposed-talks.html&quot;&gt;pull the data into the site&lt;/a&gt; using the Google Docs API.&lt;/p&gt;

&lt;h2 id=&quot;in-the-end-&quot;&gt;In the end …&lt;/h2&gt;
&lt;p&gt;Nothing’s perfect, and there’s still some technical overhead, but this will be by far the most usable Code4Lib conference site to date.  If it’s any proof, we’ve already added a number of sponsors who knew nothing about Code4Lib until this year.  It’s not as easy as it would seem to try to change things in a space without authority. But if, as Eric Schmidt (former CEO of Google) said, the Internet is the largest experiment in anarchy we’ve ever had, Code4Lib fully embodies that spirit.&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Oct 2015 10:29:20 -0400</pubDate>
        <link>http://localhost:4000/tech/blogging/design/2015/10/30/anarchists-codebook.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/design/2015/10/30/anarchists-codebook.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
        <category>design</category>
        
      </item>
    
      <item>
        <title>How to Generate IIIF Manifests from METS with oSullivan</title>
        <description>&lt;p&gt;There has been some interest in the community around how to use the osullivan gem to generate manifests, so I have decided to write a blog post that will document my experience and hopefully be of some use to others who want to start using osullivan.  In this post, I will step through the process of cooking up a utility app that will turn structured data in the METS format into IIIF Presentation API manifests.&lt;/p&gt;

&lt;p&gt;Since we are “cleaning up” the extensive METS data to make it “presentable” on the web, I’m calling the app “spiiiffy”.  Our infrastructure already has lots of support for Rails apps, so I’m going to go with the flow and use ruby 2.0.0p451 paired with Rails 4.2.0.  Here we go:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spiiiffy&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Spiiiffy will need to take a URL that provides a METS document, use the nokogiri gem to parse the XML data, and use the osullivan gem to create the Presentation API manifest structure.  Then it will need to store both datastreams and deliver either depending on the request.&lt;/p&gt;

&lt;p&gt;So we modify our Gemfile by adding these lines:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Use Nokogiri for XML parsing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'nokogiri'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 1.6.6.2'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Use osullivan for Manifest creation&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'osullivan'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&amp;gt;= 0.0.3'&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s generate our Metadata model and run the migration to create the table:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scaffold&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Metadata&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:longtext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:longtext&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:string&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:migrate&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Add the accessors to the model:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Metadatum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActiveRecord&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:mets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:manifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:objid&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

  &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before saving, extract the title and objid from the record for human and computer usability:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before_create&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:set_objid&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;before_update&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:set_title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:set_objid&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_title&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'(//mods:titleInfo/mods:title/text())[1]'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mods'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/mods/v3'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;blank?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;untitled&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;set_objid&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;objid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(//mets:mets/@OBJID)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We’re going to make sure that we can get to the object using the OBJID instead of the Rails internal id.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_param&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;objid&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;#validates_format_of :objid, :with =&amp;gt; /\A[a-z].+\z/&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_by_objid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Start building a manifest with osullivan&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_manifest&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'@id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://localhost:3000/metadata/#{self.objid}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s1&quot;&gt;'label'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;# Any options you add are added to the object&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IIIF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Presentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Manifest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#...&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note: for some reason, I needed to add &lt;code class=&quot;highlighter-rouge&quot;&gt;require 'iiif/presentation'&lt;/code&gt; to the top of the model file even though it’s in the Gemfile.  May not be loading correctly.&lt;/p&gt;

&lt;p&gt;I should probably write a test for this, but just to quickly check to make sure it’s working, I spun up the rails server and noticed the json data in the manifest textarea when attempting to edit a record.  Huzzzaaah, a baby manifest!&lt;/p&gt;

&lt;p&gt;Now we’re starting to really get our hands dirty, and it’s probably time to refactor some things. For example, in both set_title and set_objid we are doing the same thing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We should pull these duplicate steps out and when initialized we create a Nokogiri nodeset object that’s accessible to all methods within this class.  I don’t know how to do this yet.&lt;/p&gt;

&lt;p&gt;We will put off the refactoring for the moment in the interest of working code. The next step is to iterate over the mets:structMap and add canvases to our baby manifest. So, yet again, we create a Nokogiri doc from the METS, get our ordered list, and also grab all the image files from the fileSec:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Nokogiri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#get structMap ... start with ordered list&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ol&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'//mets:structMap/mets:div/mets:div[@TYPE=&quot;OrderedList&quot;]/mets:div'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#get fileSec&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'//mets:fileSec/mets:fileGrp[@USE=&quot;deliverables&quot;]/mets:file'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xlink'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.w3.org/1999/xlink'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Our mets:file references have two different identifiers in addition to a URN associated with them.  One identifier (@ADMID) is used by mets:techMD and the other (@ID) is usec by mets:structMap.  In order to easily work access both, I’m going to create a hash with both of these identifiers and grab our :&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;files_hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;files&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@ID)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xlink'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.w3.org/1999/xlink'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;fadmid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@ADMID)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xlink'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.w3.org/1999/xlink'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;files_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fid&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fadmid&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok, so it’s easy to get the label and order number from our structMap, and we can use that file_hash to get at the image dimensions to set on each canvas:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@LABEL)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@ORDER)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(mets:fptr/@FILEID)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;iw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//techMD[@ID=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;]//imageWidth/text()'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ih&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//techMD[@ID=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;]//imageHeight/text()'&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;img_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ih&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# let's print out the img_width to make sure this is working...&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Uh oh!  Nothing!  Looking at the mets:techMD section I think there’s a namespace issue in getting at our image dimensions:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:techMD&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;uoma&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:mdWrap&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MDTYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;NISOIMG&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mets&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:xmlData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.loc.gov/mix/v20&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;xsi&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:schemaLocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.loc.gov/mix/v20 http://www.loc.gov/standards/mix/mix20/mix20.xsd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BasicImageInformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BasicImageCharacteristics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageWidth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5674&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/imageWidth&amp;gt;
            &amp;lt;imageHeight&amp;gt;7200&amp;lt;/im&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ageHeight&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/BasicImageCharacteristics&amp;gt;
        &amp;lt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;BasicImageInformation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/mix&amp;gt;
    &amp;lt;/me&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:xmlData&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/mets:mdWrap&amp;gt;
&amp;lt;/me&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ts&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:techMD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Of course, we can bypass the whole namespace issue, and we don’t really need the namespaces anyway.  So, in the interest of getting working code I’m going to clone the mets_doc and wipe out the namespaces for this one step:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;clone&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;remove_namespaces!&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@LABEL)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@ORDER)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(mets:fptr/@FILEID)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;iw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//techMD[@ID=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;]//imageWidth/text()'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ih&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//techMD[@ID=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;]//imageHeight/text()'&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;img_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ih&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;# let's print out the img_width to make sure this is working...&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hooray! Now we can remove our puts statement and actually add all this data to the Canvas.  The full block would look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;      &lt;span class=&quot;n&quot;&gt;ol&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@LABEL)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(@ORDER)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;item_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'string(mets:fptr/@FILEID)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;files_hash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;item_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;iw&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//techMD[@ID=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;]//imageWidth/text()'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;ih&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//techMD[@ID=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;]//imageHeight/text()'&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;img_height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ih&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IIIF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Presentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/canvas/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;order&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;img_height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_i&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# put the code for grabbing images here&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sequences&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pretty&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, that is a long block.  In fact, we’re going to need to make it longer because in the same pass we are going to want to add the Images to the Canvas before adding it to &lt;code class=&quot;highlighter-rouge&quot;&gt;m.sequences&lt;/code&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;i_urn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'//mets:file[@ADMID=&quot;'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;item_aid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&quot;]/mets:FLocat/@xlink:href'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;img_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mets_doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xpath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i_urn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'mets'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.loc.gov/METS/'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'xlink'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://www.w3.org/1999/xlink'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^urn:pudl:images:deliverable:/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IIIF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Presentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ImageResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://libimages.princeton.edu/loris2/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/full/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_height&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/0/default.jpg&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;image/jpeg&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;width&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;height&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IIIF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Presentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@type'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'oa:Annotation'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'motivation'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'sc:painting'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'#{canvas[&quot;@id&quot;]}/images'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'resource'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;images&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ok, we have to do one more thing before we can have a workable IIIF Manifest: add the service information.  This should be rather simple as we just need to create a new resource that we stuff into the ImageResource, the same way we inserted the ImageResource into the Images Resource that lists ImageResources (I know, it gets crazy!).  Probably simpler to show:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IIIF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Presentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@context'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://iiif.io/api/image/2/context.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'profile'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'http://iiif.io/api/image/2/level2.json'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'@id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://libimages.princeton.edu/loris2/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;IIIF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Presentation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;ImageResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'@id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://libimages.princeton.edu/loris2/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/full/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_width&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;img_height&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/0/default.jpg&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;format&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;image/jpeg&quot;&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;width&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;height&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</description>
        <pubDate>Wed, 10 Jun 2015 10:29:20 -0400</pubDate>
        <link>http://localhost:4000/tech/blogging/2015/06/10/spiiiffy.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/2015/06/10/spiiiffy.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>On Booking and Recruitment: Talent Is Your Clientele</title>
        <description>&lt;p&gt;As I have many interests, I don’t always write about technology.  However, this friendly rant could be applied to a successful web development shop as well. The gist of this post could be boiled down to this: your talent is really your clientele.  Without great talent, who also know other talent, you will never get off the ground.  When a friend recently asked me for advice on booking musical entertainment.  She admired the work I did with Soupçon Salon, a successful local supper and music club that I ran for over five years.  We experimented and tweaked our approach throughout Soupçon’s lifespan, but much of the formula for our success was influenced by my experiences over the years as a working musician.  It’s a dream of mine to be able to book quality acts for an awesome venue, so here are some crumbs of wisdom I’ve gathered over the years.  If you could care less about live music, but manage a team of web professionals, swap out “musician” with “developer”.&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/22037640?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;500&quot; height=&quot;281&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;https://vimeo.com/22037640&quot;&gt;&quot;Dance with Me&quot; - Performed by John Beacher and Louis Sparre at Soupcon Salon 4.4.11&lt;/a&gt; from &lt;a href=&quot;https://vimeo.com/tweed&quot;&gt;TWEED VIDEO&lt;/a&gt; on &lt;a href=&quot;https://vimeo.com&quot;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;musicians-first&quot;&gt;Musicians First!&lt;/h2&gt;
&lt;p&gt;It may seem paradoxical, but when running a music venue, your clientele are not the patrons, the musicians are.  Musicians get treated like crap.  I can only imagine the thinking behind this is that we are a dime a dozen.  Everyone plays music these days, and many folks will play for free just to get heard.  The idea that musicians are expendable is the kiss of death for any entertainment venue.&lt;/p&gt;

&lt;p&gt;I have showed up to gigs where we didn’t go on until 1:00am (even though we were supposed to play at 10:00pm).  I have played gigs where our payment didn’t even cover the gas it took to get there.  I have played bars where we didn’t even get a free drink.  I might understand if we didn’t bring anyone through the doors, but these are shows where we actually had decent turnouts.  Not only will I never play those venues again, but I will make sure that none of my friends play those venues.&lt;/p&gt;

&lt;p&gt;At Soupçon we always treated the musicians with the respect they deserved, whether they were just starting out, or veterans of the local music scene.  One of the banes of a gigging musician is all the gear they have to lug around.  To free our performers of this burden, we made sure that the PA was set up in advance, so they could just arrive “Chuck Berry style”, with nothing more than a guitar in hand.  Other things that made a difference were making sure that someone was there to greet them and orient them when they arrived.  There was always food and drink set aside for them.&lt;/p&gt;

&lt;p&gt;Because we let folks eat and converse for a while, and we marked the start of a performance with a heartfelt and informed introduction, there was no talking during the performances.  This level of intimacy is a lovely surprise to many local musicians who are often competing with an indifferent and loud bar crowd.&lt;/p&gt;

&lt;p&gt;Even though the musicians were always paid by tips alone, they often made more at Soupçon on a Monday night than they did in other venues on weekends.  This is because they did not have to ask the audience for money.  I, as the MC, would always wait for a good time to make an appeal (usually lightly rehearsed and customized) to the audience on their behalf.  Because there was a sense of camaraderie and a real community, the audience jumped at the opportunity to throw money in the hat.&lt;/p&gt;

&lt;p&gt;If you have just a few quality musicians who trust you, and you make their experience great, then you will never have to seek out another band.  Quality acts will be banging down your door.  The reason for this is because good musicians hang out with other good musicians, and word travels fast in those circles.  Your reputation in these circles is your greatest asset.&lt;/p&gt;

&lt;h2 id=&quot;the-experience&quot;&gt;The Experience&lt;/h2&gt;
&lt;p&gt;Music is everywhere these days.  Anyone can see great performances on YouTube.  But what you can create in a club is a unique experience, and this is what you are selling.  Live music is so valuable because there’s an element of danger that cannot be edited out or curated away.  That creates energy in the room and often leads to magic.  Many musicians, even those who have played live for decades in front of sold out crowds, frequently told me that Soupçon was one of their best performance experiences ever.&lt;/p&gt;

&lt;p&gt;At one point we had to move from an intimate, artsy French restaurant, to glorified deli.  While the owner of the deli was a wonderful person, incredibly accommodating, and really got the community aspect of it, the venue never felt like a great fit to me.  Despite the red curtain that went behind the musicians, the owner (who had fallen ill when we started) was not able to be there to oversee details and the staff was often reluctant to change things like lighting, or shut off the refrigeration temporarily so folks in the back could hear the music over the hum.  While we still filled most seats and had magical performances, something was lost about the experience.  Your reputation to deliver an incredible experience is almost as important as your reputation among musicians.&lt;/p&gt;

&lt;h2 id=&quot;how-to-select-musicians&quot;&gt;How to Select Musicians&lt;/h2&gt;
&lt;p&gt;The Musicians you select will depend on the size of the venue.  You want the venue to be packed, not (only) because it maximizes profits, but because the audience feels grateful to be there and generates energy – this is the best place to be at this moment, and the packed house reinforces that perception.  On the other hand, you don’t want to turn people away.  It only takes a couple of times of being turned away at the door before folks write it off.  So, the right balance is important.&lt;/p&gt;

&lt;p&gt;But there are advantages to a small intimate space.  You can book people who are just starting out.  People love to be in early on someone’s career, to feel like they’ve discovered something, to have their finger on the pulse.  If you book someone who doesn’t have an audience yet, you have to be sold on them yourself, and then help sell them to your clientele.&lt;/p&gt;

&lt;h2 id=&quot;promotion-matters&quot;&gt;Promotion Matters&lt;/h2&gt;
&lt;p&gt;The benefit of booking local musicians at this level is that they often bring out fans.  In fact, they should know how many people you expect them to bring (if they want to play again).  But you should never rely on musicians to bring out more than half the potential audience.  This is a collaboration, and it’s not only a service to the musicians to relieve some of the pressure of “the draw”, but it ensures you don’t have all your eggs in one basket and will make money even if the musician didn’t do a great job of promotion or is just starting out and has a limited audience.&lt;/p&gt;

&lt;p&gt;As with the event experience, details in the promotion matters.  At this level, you will be lucky if the bands have their own websites and tracks online.  The way in which you describe the musician needs to convince an audience who has never heard them that they are worth the trip.  This requires quite a large breadth of musical knowledge so that you can make appropriate comparisons and pique some interest.  If it’s a walking town, posters go a long way.  Offer to post flyers if the band prints them, or find other ways of sharing the promotional labor.&lt;/p&gt;

&lt;h2 id=&quot;cultivating-an-audience&quot;&gt;Cultivating an Audience&lt;/h2&gt;
&lt;p&gt;As mentioned earlier, many venues depend on the performers to draw the audience.  While I agree that performers should draw their share, the experience and reputation of your venue should get people to show up even when they have no idea who is performing.  The value that you are providing is much more than entertainment and nourishment – it’s community and a connection with the underground zeitgeist.  With the growth of a more secular society and waning of religious communities, this has often been called a “Third Space”, which is where people go to meet with others outside the formal context of work or the intimacy of home.  The MC has the responsibility to introduce herself to any new faces and make them feel welcome.&lt;/p&gt;

&lt;h2 id=&quot;the-price-is-right&quot;&gt;The Price is Right&lt;/h2&gt;
&lt;p&gt;Remember, your clientele are musicians.  You do not want to price out the artists.  The artists are what give your venue its edge and life, so if they can’t afford to be there on a regular basis, you are going to become a crusty old sell out. I won’t judge if you want to take that road, but just know that you will lose many of the benefits you get from having artists in your audience and you will have to work twice as hard to get your audience out.  When you charge a small amount for dinner and allow the artists to tip the other artists, you don’t get complaints when things aren’t perfect, and if you do… well, what do you expect for $15?&lt;/p&gt;

&lt;h2 id=&quot;tickets-or-not&quot;&gt;Tickets or Not?&lt;/h2&gt;
&lt;p&gt;Furthermore, I would not sell tickets unless you are expecting a lot of out of town guests.  You don’t want people to have to drive even a short distance only to get turned away at the door.  Tickets really complicate things.  You have the overhead of the ticketing system, lost tickets, refunds, and you don’t get that nice line outside the door that serves to alert others in the community that something cool is going on here.&lt;/p&gt;

&lt;p&gt;As I think back over my twenty years of being a musician and performer, the places that are still around are the ones that care about musicians, treat them well, and show respect.  Being a gigging musician is hard work, so the little breaks and gestures you can offer go a long way towards cultivating the kind of relationship you want.  The musicians are not working &lt;em&gt;for&lt;/em&gt; you.  They are working &lt;em&gt;with&lt;/em&gt; you, in harmony.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Jul 2014 04:53:05 -0400</pubDate>
        <link>http://localhost:4000/music/blogging/2014/07/12/on-booking.html</link>
        <guid isPermaLink="true">http://localhost:4000/music/blogging/2014/07/12/on-booking.html</guid>
        
        
        <category>music</category>
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>Publish a Website With a Custom Domain On a Shoestring</title>
        <description>&lt;p&gt;Alternate Title: How To Create Your Own Website For Next to Nothing&lt;/p&gt;

&lt;p&gt;For a long time, home ownership was a key indicator of fulfillment of the American Dream.  We believe we’ve achieved a certain level of “success” when we can entertain the idea of taking down a wall or running a speaker system to every room in the house.  To some degree, the online equivalent is to have our own address, or in web-speak, our own domain.&lt;/p&gt;

&lt;p&gt;While no one ever had to take out a mortgage to have their own domain, a lot of people pay in the ballpark of $100/year for a decent hosting plan for their personal site or small business.  As a technologist, I was paying nearly $30/month for a VPS with command-line access.  Initially, I wanted the freedom to install whatever I wanted without the normal restrictions found in shared hosting environments, but it turned out that I was barely even updating my own content.  I also wasn’t installing much of anything since I don’t really find system administration to be that much fun, and feared an install-gone-bad might jeopardize friends’ sites that I hosted and imprison me to a weekend of server reconstruction.  While I know there are cheaper plans out there, the point is that I was paying way more than I needed.  If you have your own domain, you probably are too.&lt;/p&gt;

&lt;p&gt;One of my New Year’s resolutions was to journal about my experiences and interests, which includes blogging anything I want to have an audience for.  I have known about GitHub Pages for a while and have been trying to find the time, but mostly work up the courage, to migrate my personal site, sdellis.com, and my band site, highhearts.com off the VPS and over to GitHub Pages.  I get my email through sdellis.com, and it is essentially my lifeline to the Internet.  As a barely amateur sysadmin, I didn’t feel confident in debugging any problems with my DNS and risk not having access to my email for however long it takes me to stumble through my own ignorance by trial and error and Google-fu.&lt;/p&gt;

&lt;p&gt;I finally gathered up the courage, and I don’t know why I didn’t do this sooner.  It was so easy, but I have to attribute most of the ease to the four tools I used: Google Apps, GitHub Pages, Jekyll, and DNSimple.  So, I am now running two of my own personal domain with website, email, blogging, calendar, etc. for $3/month plus domain registration costs (under $10/year each).  All of these services are fairly well-documented, so I won’t go into detail about how to set them up unless I get lots of requests to do so. However, I will say that I attribute most of my courage to finally pull the trigger to DNSimple’s “One-Click Services” feature, which made all the DNS work painless.  Well-played, DNSimple (and no, I’m not affiliated). &lt;em&gt;golf clap&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now what was I going to do again?  Oh yes, start blogging…&lt;/p&gt;
</description>
        <pubDate>Fri, 07 Feb 2014 09:29:20 -0500</pubDate>
        <link>http://localhost:4000/tech/blogging/2014/02/07/king-of-my-own-domain-on-a-paupers-budget.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/2014/02/07/king-of-my-own-domain-on-a-paupers-budget.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>The Ideal UX Designer</title>
        <description>&lt;p&gt;There have been a recent spat of questions and job postings on the Code4Lib listserv around User Experience Design, and after all these years of user blaming, it is nice to see a growing appreciation for UX in the Libraries domain.  While librarians ARE a subset of library users, they’ve had too much influence, and have unfortunately brought bias to the design process that has created obstacles for the broader user base.&lt;/p&gt;

&lt;p&gt;People I talk to often confuse Usability with User Experience.  The way I see it, Usability skills are a subset of User Experience.  If you can hire two people, awesome.  If I had to choose one, I would opt to fill a User Experience role. It is at least one full-time job, ideally of higher rank due to its “big picture” nature.  I like the idea of a usability committee or working group, with the UX expert as a chair.&lt;/p&gt;

&lt;p&gt;I made a list of a few skills and abilities my ideal User Experience Designer would have in their toolbox. It’s unlikely you will get them all in one candidate, but it may give you an idea of which niches you need to fill, given your current team:&lt;/p&gt;

&lt;h2 id=&quot;creativity-and-audacity&quot;&gt;Creativity and Audacity&lt;/h2&gt;
&lt;p&gt;Design is inherently mixed with organization and culture, and in order to solve design problems a UX designer has to be willing to rethink and change long-standing traditions and culture.  A great UX designer must be able to question EVERYTHING without being abrasive.&lt;/p&gt;

&lt;h2 id=&quot;diplomacy-and-influence&quot;&gt;Diplomacy and Influence&lt;/h2&gt;
&lt;p&gt;You can’t do the above without being good at building relationships, forming consensus, negotiating, etc.  Ideally the position would have enough power in the org to be at the table for major decisions, but then again, influence does not always come from hierarchical rank.&lt;/p&gt;

&lt;h2 id=&quot;usability-interviewing-testing-and-analytics&quot;&gt;Usability Interviewing, Testing, and Analytics&lt;/h2&gt;
&lt;p&gt;Understanding, empathizing with, and advocating for ALL the users of your systems is critical, and collecting data to form and back up your arguments is a prerequisite. UX people have to talk to users about their goals, test ideas with prototypes, and collect and interpret stats/analytics. Testing is not only about whether a feature could be improved, but whether it should be there at all.  A great UX designer must identify and prioritize the right problems to solve.&lt;/p&gt;

&lt;h2 id=&quot;visual-thinkingliteracy&quot;&gt;Visual Thinking/Literacy&lt;/h2&gt;
&lt;p&gt;A great UX designer should have a good design sense, and be able to put the elements and principles of design to work in the idea pitch, information architecture, and design process.&lt;/p&gt;

&lt;h2 id=&quot;content-strategy&quot;&gt;Content Strategy&lt;/h2&gt;
&lt;p&gt;What is the overall vision of the org and how is that message delivered?  What message is currently being delivered via neglect of an overall strategy?  The lack of a content strategy is one reason why so many library websites are filled with pages that are piles of links.&lt;/p&gt;

&lt;h2 id=&quot;interaction-design&quot;&gt;Interaction Design&lt;/h2&gt;
&lt;p&gt;In libraries, where budgets can be an issue, this person should be able to put together wireframes, prototypes, and final HTML/CSS/JS designs, and most importantly be able to sketch ideas with a pencil. Of course, this could be an entirely different, more technical position, but it’s a great asset if you can find it.&lt;/p&gt;

&lt;p&gt;-Shaun&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Oct 2013 10:29:20 -0400</pubDate>
        <link>http://localhost:4000/tech/blogging/2013/10/30/ideal-ux-position.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/2013/10/30/ideal-ux-position.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
      </item>
    
      <item>
        <title>RaphaelJS - How to Make a Google-like Motion Chart: Lesson Three</title>
        <description>&lt;h2 id=&quot;lesson-three-animating-the-bubbles&quot;&gt;Lesson Three: Animating the Bubbles&lt;/h2&gt;

&lt;h3 id=&quot;step-one-group-the-bubble-data-by-time&quot;&gt;Step One: Group the Bubble Data by Time&lt;/h3&gt;

&lt;p&gt;So, if you haven’t guessed a lot of programming involves manipulating data and rearranging it into different forms that will make it more accessible and easy to loop through.  Arrays are one of the best ways to do this, and I rely on them heavily.  Arrays are essentially a list (or stack) of key:value pairs.  This makes them two-dimensional and you can put any type of value in… numbers, objects, arrays, booleans, etch.  They kind of look like this:&lt;/p&gt;

&lt;p&gt;‘0’ =&amp;gt; 10&lt;/p&gt;

&lt;p&gt;‘1’ =&amp;gt; object&lt;/p&gt;

&lt;p&gt;‘2’ =&amp;gt; array&lt;/p&gt;

&lt;p&gt;‘3’ =&amp;gt; “string”&lt;/p&gt;

&lt;p&gt;‘4’ =&amp;gt; true&lt;/p&gt;

&lt;p&gt;So, how does this help us?  It’s inconvenient to have the unit of time stuck in the last array element of the row, and duplicated at that!  What would make our lives easier is to make the key in our array into a unit of time so that we can loop over each day (or what have you… easier than saying “time interval”) and visualize the changes from day to day.  We have several data points that we need to store in each day – basically our x and y coordinates, as well as the size of our bubbles.  So, how do we store all these values in a two dimensional data structure?&lt;/p&gt;

&lt;p&gt;Thankfully there are “multi-dimensional arrays,” which allow us to do this.  Multi-dimensional arrays, are basically arrays inside of arrays.  In fact, we have already done this – remember what the data from our spreadsheet looked like when we put it into an array?  Each row became a key, and the values became an array stack.  Now what we want to do is group all “row arrays” with the same day value into another array and set that day as the key.&lt;/p&gt;

&lt;p&gt;To save space, and keep it simple, let’s say we have only two days worth of data for a single bubble – in other words, two rows.  So, we are going to write some code that will take the day value from the 5th column (#4 below) and make that the key for the time grouping.  This is how we want our “day-grouped array” to look:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  '1' ...

      '0' ...

          '0' =&amp;gt; &quot;10&quot;

          '1' =&amp;gt; &quot;20&quot;

          '2' =&amp;gt; &quot;10&quot;

          '3' =&amp;gt; &quot;green&quot;

          '4' =&amp;gt; &quot;1&quot;

  '2' ...

      '0' ...

          '0' =&amp;gt; &quot;15&quot;

          '1' =&amp;gt; &quot;30&quot;

          '2' =&amp;gt; &quot;20&quot;

          '3' =&amp;gt; &quot;green&quot;

          '4' =&amp;gt; &quot;2&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So, this is what our code will look like (new code in red):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'data.txt'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;csv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;|&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;arLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// to store labels for (day, week, month)&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this is the &quot;day-grouped array&quot; example above&lt;/span&gt;



  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arLen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Do you see what’s going on here?  I know, it’s a little hairy.  Let’s take it line by line:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;We create an array to store the time labels.  We will need to store the labels to mark up our chart.  Even though I only used numbers, you could definitely put “2 weeks” or “10 days” as a value for your units of time.  By the way, in JavaScript there are &lt;a href=&quot;http://www.w3schools.com/js/js_obj_array.asp&quot;&gt;a few ways to create an array&lt;/a&gt;.  If we don’t know what our values are going to be up front, we just create a new array and populate it later.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We create our “day-grouped array,” again, to be populated later.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;We start looping through the rows from our spreadsheet (as represented by the array named “array” - remember that one?).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Since the spreadsheet contains duplicated labels for time, we use a jQuery function called “&lt;a href=&quot;http://api.jquery.com/jQuery.inArray/&quot;&gt;inArray&lt;/a&gt;” to determine if each time interval is already represented in the time_intervals array (we only want one).  If not, then &lt;a href=&quot;http://www.w3schools.com/jsref/jsref_push.asp&quot;&gt;push&lt;/a&gt; the label into time_intervals, and create a new array for that label in timeGroups.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Finally, push the entire row for that time group into the key representing that label.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;step-two-create-a-bubble-roster-and-repaint-them-with-data-from-the-first-timegroup-element&quot;&gt;Step Two: Create a Bubble “Roster” and Repaint Them With Data from the first timeGroup Element&lt;/h3&gt;

&lt;p&gt;In the last lesson, we looped over each array element and painted bubbles on the canvas.  However, during that loop, we reused (and overwrote) the same “bubble” variable.  Therefore we have no way to refer to each bubble we painted on the canvas “by name,” which is problematic if we want to give it some directions!  We are going to revisit our trusty friend, the array, so we will be able to refer to them.  However, since we don’t know how many bubbles we will actually have (that’s determined by the data), we will just assign them an incremental number (aka, key) and save them as values in an array called “bubbleNames”.&lt;/p&gt;

&lt;p&gt;So, because the bubbles we created in the previous lesson don’t have “names”, we will need to get rid of that code, and  repaint them using the first element of the timeGroups array, which holds the starting data for each of the bubbles.  This code would go right after the previous “for” block, but within the last function brace.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;    &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bubLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bubLen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;paper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;circle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fill&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fill-opacity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;stroke&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#fff&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Let’s step through this code line by line as well.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Here is where we create an array that essentially names our bubbles.  We can store any type of variable in an array value, including strings, other arrays, and “objects”.  Our bubbles are objects.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the second red line, we are getting the length of the array (bubLen) that is stored in the first timeGroups element so we know how many bubbles to name.  Notice that the element “keys” for the timeGroups array are the labels we used for time_intervals (not the typical incremented numerical values starting at zero).  So, we use the value of the first time_intervals element as the key for getting the first timeGroups element.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Since we will be painting the first bubbles from the first timeGroups element, we need to use time_intervals[0] again to get the data for each bubble (represented by “i”).&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;step-three-animate-the-bubbles&quot;&gt;Step Three: Animate the Bubbles&lt;/h2&gt;

&lt;p&gt;So, this &lt;em&gt;should&lt;/em&gt; have been a lot easier than it was.  I don’t know if there’s a bug in the Raphael code, or if I’m doing something wrong, but the following &lt;em&gt;should&lt;/em&gt; have worked:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeLen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeUnitLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bubUnitLen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;

       &lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;

         &lt;span class=&quot;na&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

         &lt;span class=&quot;na&quot;&gt;cy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

         &lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

       &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The above code, may not be perfect because I wasn’t able to test it properly.  It was animating, but the bubbles were not changing course if the data/numbers started declining instead of incrementing – it seemed to “tween” from the beginning value to the last value without paying attention to anything in betwee.&lt;/p&gt;

&lt;p&gt;Anyway, there’s usually a dozen ways to get to the same result when programming (I think I tried them all before I got to this).  When this approach didn’t work, I looked at the &lt;a href=&quot;http://raphaeljs.com/reference.html#animate&quot;&gt;“keyframes”&lt;/a&gt;option for animating the bubbles.  This is tough to do dynamically because you need to know what percentages of the overall animation time should be taken between each “keyframe”.  It would be easy if I could set variables for the percentages, but that wasn’t working.  Luckily there is a powerful, if frowned upon, function in JavaScript, called &lt;em&gt;eval()&lt;/em&gt;, for dynamically creating a string and executing it as code.   So that’s what I did here (immediately following the last code block), and although it’s ugly… it worked!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;timeLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;



&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyframeSplit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ceil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeLen&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colOrder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cx&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;r&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this is the order of the column values in our spreadsheet&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;totalBubbles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;totalBubbles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// for each bubble we created...&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'bubbleNames['&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'].stop()'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colnum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colnum&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// each column animates with a set of keyframes&lt;/span&gt;

        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'.animate({'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bLen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// create keyframes&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;keyframeSplit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'%&quot;: {'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colOrder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;':'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colOrder&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'300 -'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// remember, we need to subtract the canvas height from y&lt;/span&gt;

	    &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'timeGroups['&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;time_intervals&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;']['&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;']['&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;colnum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;']},'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'}, 5000)'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;';'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;


&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, I will deconstruct the above code if you need me to, but essentially, I am creating a codeblock that looks like this, putting it into a string variable called “str”, and using the eval() function to execute it for each bubble:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;bubbleNames&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;34%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;68%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;102%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;34%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;68%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;102%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;cy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;animate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;34%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;68%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

    &lt;span class=&quot;s2&quot;&gt;&quot;102%&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeGroups&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]},&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will notice that the x, y, and radius animations are happening in the span of 5 seconds (5000 miliseconds).  You will also notice that my math for percentages is not perfect… I rounded any decimals up, and could have added an extra step here to keep it to 100%, but it didn’t seem to matter that it was over, so whatever.&lt;/p&gt;

&lt;p&gt;So, this is no doubt a bit confusing!  Looping through arrays can be a mind bender, so if you do a “view source” on the following example, there is a function called “dump()” that spits them out on the page in a more visual way.  Anyway, you can see the full, working code here (and view source it):&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://hit-worthy.com/bubbles/&quot;&gt;http://hit-worthy.com/bubbles/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next lesson will be the finishing touches: the axes, labels, and scaling to fit the screen.&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Jul 2011 10:29:20 -0400</pubDate>
        <link>http://localhost:4000/tech/blogging/2011/07/27/raphaeljs-tutorial-3.html</link>
        <guid isPermaLink="true">http://localhost:4000/tech/blogging/2011/07/27/raphaeljs-tutorial-3.html</guid>
        
        
        <category>tech</category>
        
        <category>blogging</category>
        
      </item>
    
  </channel>
</rss>
